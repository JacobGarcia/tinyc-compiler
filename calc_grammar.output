Terminals unused in grammar

   NAME
   NUMBER
   RT


State 47 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: var_dec stmt_seq

    2 var_dec: var_dec single_dec
    3        | %empty

    4 single_dec: type ID SEMI

    5 type: INTEGER
    6     | FLOAT

    7 stmt_seq: stmt_seq stmt
    8         | %empty

    9 stmt: IF exp THEN stmt
   10     | IF exp THEN stmt ELSE stmt
   11     | WHILE exp DO stmt
   12     | variable ASSIGN exp SEMI
   13     | READ LPAREN variable RPAREN SEMI
   14     | WRITE LPAREN exp RPAREN SEMI
   15     | block

   16 block: LBRACE stmt_seq RBRACE

   17 exp: simple_exp LT simple_exp
   18    | simple_exp EQ simple_exp
   19    | simple_exp

   20 simple_exp: simple_exp PLUS term
   21           | simple_exp MINUS term
   22           | term

   23 term: term TIMES factor
   24     | term DIV factor
   25     | factor

   26 factor: LPAREN exp RPAREN
   27       | INT_NUM
   28       | FLOAT_NUM
   29       | variable

   30 variable: ID


Terminals, with rules where they appear

$end (0) 0
error (256)
NAME (258)
NUMBER (259)
INTEGER (260) 5
FLOAT (261) 6
IF (262) 9 10
THEN (263) 9 10
ELSE (264) 10
WHILE (265) 11
READ (266) 13
WRITE (267) 14
SEMI (268) 4 12 13 14
LPAREN (269) 13 14 26
RPAREN (270) 13 14 26
LBRACE (271) 16
RBRACE (272) 16
LT (273) 17
RT (274)
ASSIGN (275) 12
EQ (276) 18
PLUS (277) 20
MINUS (278) 21
TIMES (279) 23
DIV (280) 24
ID (281) 4 30
INT_NUM (282) 27
FLOAT_NUM (283) 28
DO (284) 11


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
var_dec (32)
    on left: 2 3, on right: 1 2
single_dec (33)
    on left: 4, on right: 2
type (34)
    on left: 5 6, on right: 4
stmt_seq (35)
    on left: 7 8, on right: 1 7 16
stmt (36)
    on left: 9 10 11 12 13 14 15, on right: 7 9 10 11
block (37)
    on left: 16, on right: 15
exp (38)
    on left: 17 18 19, on right: 9 10 11 12 14 26
simple_exp (39)
    on left: 20 21 22, on right: 17 18 19 20 21
term (40)
    on left: 23 24 25, on right: 20 21 22 23 24
factor (41)
    on left: 26 27 28 29, on right: 23 24 25
variable (42)
    on left: 30, on right: 12 13 29


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (var_dec)

    program  go to state 1
    var_dec  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: var_dec . stmt_seq
    2 var_dec: var_dec . single_dec

    INTEGER  shift, and go to state 4
    FLOAT    shift, and go to state 5

    $default  reduce using rule 8 (stmt_seq)

    single_dec  go to state 6
    type        go to state 7
    stmt_seq    go to state 8


State 3

    0 $accept: program $end .

    $default  accept


State 4

    5 type: INTEGER .

    $default  reduce using rule 5 (type)


State 5

    6 type: FLOAT .

    $default  reduce using rule 6 (type)


State 6

    2 var_dec: var_dec single_dec .

    $default  reduce using rule 2 (var_dec)


State 7

    4 single_dec: type . ID SEMI

    ID  shift, and go to state 9


State 8

    1 program: var_dec stmt_seq .
    7 stmt_seq: stmt_seq . stmt

    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    READ    shift, and go to state 12
    WRITE   shift, and go to state 13
    LBRACE  shift, and go to state 14
    ID      shift, and go to state 15

    $default  reduce using rule 1 (program)

    stmt      go to state 16
    block     go to state 17
    variable  go to state 18


State 9

    4 single_dec: type ID . SEMI

    SEMI  shift, and go to state 19


State 10

    9 stmt: IF . exp THEN stmt
   10     | IF . exp THEN stmt ELSE stmt

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 23
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 11

   11 stmt: WHILE . exp DO stmt

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 28
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 12

   13 stmt: READ . LPAREN variable RPAREN SEMI

    LPAREN  shift, and go to state 29


State 13

   14 stmt: WRITE . LPAREN exp RPAREN SEMI

    LPAREN  shift, and go to state 30


State 14

   16 block: LBRACE . stmt_seq RBRACE

    $default  reduce using rule 8 (stmt_seq)

    stmt_seq  go to state 31


State 15

   30 variable: ID .

    $default  reduce using rule 30 (variable)


State 16

    7 stmt_seq: stmt_seq stmt .

    $default  reduce using rule 7 (stmt_seq)


State 17

   15 stmt: block .

    $default  reduce using rule 15 (stmt)


State 18

   12 stmt: variable . ASSIGN exp SEMI

    ASSIGN  shift, and go to state 32


State 19

    4 single_dec: type ID SEMI .

    $default  reduce using rule 4 (single_dec)


State 20

   26 factor: LPAREN . exp RPAREN

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 33
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 21

   27 factor: INT_NUM .

    $default  reduce using rule 27 (factor)


State 22

   28 factor: FLOAT_NUM .

    $default  reduce using rule 28 (factor)


State 23

    9 stmt: IF exp . THEN stmt
   10     | IF exp . THEN stmt ELSE stmt

    THEN  shift, and go to state 34


State 24

   17 exp: simple_exp . LT simple_exp
   18    | simple_exp . EQ simple_exp
   19    | simple_exp .
   20 simple_exp: simple_exp . PLUS term
   21           | simple_exp . MINUS term

    LT     shift, and go to state 35
    EQ     shift, and go to state 36
    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 19 (exp)


State 25

   22 simple_exp: term .
   23 term: term . TIMES factor
   24     | term . DIV factor

    TIMES  shift, and go to state 39
    DIV    shift, and go to state 40

    $default  reduce using rule 22 (simple_exp)


State 26

   25 term: factor .

    $default  reduce using rule 25 (term)


State 27

   29 factor: variable .

    $default  reduce using rule 29 (factor)


State 28

   11 stmt: WHILE exp . DO stmt

    DO  shift, and go to state 41


State 29

   13 stmt: READ LPAREN . variable RPAREN SEMI

    ID  shift, and go to state 15

    variable  go to state 42


State 30

   14 stmt: WRITE LPAREN . exp RPAREN SEMI

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 43
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 31

    7 stmt_seq: stmt_seq . stmt
   16 block: LBRACE stmt_seq . RBRACE

    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    READ    shift, and go to state 12
    WRITE   shift, and go to state 13
    LBRACE  shift, and go to state 14
    RBRACE  shift, and go to state 44
    ID      shift, and go to state 15

    stmt      go to state 16
    block     go to state 17
    variable  go to state 18


State 32

   12 stmt: variable ASSIGN . exp SEMI

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    exp         go to state 45
    simple_exp  go to state 24
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 33

   26 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 46


State 34

    9 stmt: IF exp THEN . stmt
   10     | IF exp THEN . stmt ELSE stmt

    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    READ    shift, and go to state 12
    WRITE   shift, and go to state 13
    LBRACE  shift, and go to state 14
    ID      shift, and go to state 15

    stmt      go to state 47
    block     go to state 17
    variable  go to state 18


State 35

   17 exp: simple_exp LT . simple_exp

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    simple_exp  go to state 48
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 36

   18 exp: simple_exp EQ . simple_exp

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    simple_exp  go to state 49
    term        go to state 25
    factor      go to state 26
    variable    go to state 27


State 37

   20 simple_exp: simple_exp PLUS . term

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    term      go to state 50
    factor    go to state 26
    variable  go to state 27


State 38

   21 simple_exp: simple_exp MINUS . term

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    term      go to state 51
    factor    go to state 26
    variable  go to state 27


State 39

   23 term: term TIMES . factor

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    factor    go to state 52
    variable  go to state 27


State 40

   24 term: term DIV . factor

    LPAREN     shift, and go to state 20
    ID         shift, and go to state 15
    INT_NUM    shift, and go to state 21
    FLOAT_NUM  shift, and go to state 22

    factor    go to state 53
    variable  go to state 27


State 41

   11 stmt: WHILE exp DO . stmt

    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    READ    shift, and go to state 12
    WRITE   shift, and go to state 13
    LBRACE  shift, and go to state 14
    ID      shift, and go to state 15

    stmt      go to state 54
    block     go to state 17
    variable  go to state 18


State 42

   13 stmt: READ LPAREN variable . RPAREN SEMI

    RPAREN  shift, and go to state 55


State 43

   14 stmt: WRITE LPAREN exp . RPAREN SEMI

    RPAREN  shift, and go to state 56


State 44

   16 block: LBRACE stmt_seq RBRACE .

    $default  reduce using rule 16 (block)


State 45

   12 stmt: variable ASSIGN exp . SEMI

    SEMI  shift, and go to state 57


State 46

   26 factor: LPAREN exp RPAREN .

    $default  reduce using rule 26 (factor)


State 47

    9 stmt: IF exp THEN stmt .
   10     | IF exp THEN stmt . ELSE stmt

    ELSE  shift, and go to state 58

    ELSE      [reduce using rule 9 (stmt)]
    $default  reduce using rule 9 (stmt)


State 48

   17 exp: simple_exp LT simple_exp .
   20 simple_exp: simple_exp . PLUS term
   21           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 17 (exp)


State 49

   18 exp: simple_exp EQ simple_exp .
   20 simple_exp: simple_exp . PLUS term
   21           | simple_exp . MINUS term

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38

    $default  reduce using rule 18 (exp)


State 50

   20 simple_exp: simple_exp PLUS term .
   23 term: term . TIMES factor
   24     | term . DIV factor

    TIMES  shift, and go to state 39
    DIV    shift, and go to state 40

    $default  reduce using rule 20 (simple_exp)


State 51

   21 simple_exp: simple_exp MINUS term .
   23 term: term . TIMES factor
   24     | term . DIV factor

    TIMES  shift, and go to state 39
    DIV    shift, and go to state 40

    $default  reduce using rule 21 (simple_exp)


State 52

   23 term: term TIMES factor .

    $default  reduce using rule 23 (term)


State 53

   24 term: term DIV factor .

    $default  reduce using rule 24 (term)


State 54

   11 stmt: WHILE exp DO stmt .

    $default  reduce using rule 11 (stmt)


State 55

   13 stmt: READ LPAREN variable RPAREN . SEMI

    SEMI  shift, and go to state 59


State 56

   14 stmt: WRITE LPAREN exp RPAREN . SEMI

    SEMI  shift, and go to state 60


State 57

   12 stmt: variable ASSIGN exp SEMI .

    $default  reduce using rule 12 (stmt)


State 58

   10 stmt: IF exp THEN stmt ELSE . stmt

    IF      shift, and go to state 10
    WHILE   shift, and go to state 11
    READ    shift, and go to state 12
    WRITE   shift, and go to state 13
    LBRACE  shift, and go to state 14
    ID      shift, and go to state 15

    stmt      go to state 61
    block     go to state 17
    variable  go to state 18


State 59

   13 stmt: READ LPAREN variable RPAREN SEMI .

    $default  reduce using rule 13 (stmt)


State 60

   14 stmt: WRITE LPAREN exp RPAREN SEMI .

    $default  reduce using rule 14 (stmt)


State 61

   10 stmt: IF exp THEN stmt ELSE stmt .

    $default  reduce using rule 10 (stmt)
